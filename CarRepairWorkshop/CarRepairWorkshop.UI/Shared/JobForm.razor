@inject ICustomerService CustomerService
@inject IJobService JobService

<EditForm Model="Job" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div class="mb-3">
        <label class="form-label">Customer</label>
        <InputSelect @bind-Value="Job.CustomerId" class="form-select">
            @if (customers is not null)
            {
                foreach (var customer in customers)
                {
                    <option value="@customer.Id">@customer.Name</option>
                }
            }
        </InputSelect>
    </div>
    <div class="mb-3">
        <label class="form-label">Vehicle Model Name</label>
        <InputText @bind-Value="Job.VehicleModelName" class="form-control"/>
        <ValidationMessage For="() => Job.VehicleModelName" />
    </div>
    <div class="mb-3">
        <label class="form-label">Vehicle Make</label>
        <InputText @bind-Value="Job.Make" class="form-control"/>
        <ValidationMessage For="() => Job.Make" />
    </div>
    <div class="mb-3">
        <label class="form-label">Manufacturing Year</label>
        <InputNumber @bind-Value="Job.Year" class="form-control"/>
        <ValidationMessage For="() => Job.Year" />
    </div>
    <div class="mb-3">
        <label class="form-label">License Plate</label>
        <InputText @bind-Value="Job.LicensePlate" class="form-control"/>
        <ValidationMessage For="() => Job.LicensePlate" />
    </div>
    <div class="mb-3">
        <label class="form-label">Description</label>
        <InputText @bind-Value="Job.Description" class="form-control"/>
        <ValidationMessage For="() => Job.Description" />
    </div>
    <div class="mb-3">
        <label class="form-label">Job Category</label>
        <InputSelect @bind-Value="Job.JobCategory" class="form-select">
            <option value="@(JobCategory.Body)">@JobCategory.Body</option>
            <option value="@JobCategory.Engine">@JobCategory.Engine</option>
            <option value="@JobCategory.Undercarriage">@JobCategory.Undercarriage</option>
            <option value="@JobCategory.BrakingSystem">@JobCategory.BrakingSystem</option>
        </InputSelect>
        <ValidationMessage For="() => Job.JobCategory" />
    </div>
    <div class="mb-3">
        <label class="form-label">Severity</label>
        <InputNumber @bind-Value="Job.Severity" class="form-control"/>
        <ValidationMessage For="() => Job.Severity" />
    </div>

    <button type="submit" class="btn btn-primary form-control">@ButtonTitle</button>
</EditForm>

@code {

    [Parameter]
    public Job Job { get; set; }

    [Parameter]
    public string ButtonTitle { get; set; }

    [Parameter]
    public Func<Task> OnValidSubmit { get; set; }

    IEnumerable<Customer>? customers { get; set; }

    protected override async Task OnInitializedAsync()
    {
        customers = await CustomerService.GetCustomersAsync();

        Job.JobStatus = JobStatus.Scheduled;
    }
}