@page "/vehicle-model-details/{id:long}"
@inject IVehicleModelService VehicleModelService
@inject NavigationManager NavigationManager

@if (VehicleModel is not null)
{
    <h3>Details of @VehicleModel.ModelName</h3>

    <VehicleModelForm VehicleModel="VehicleModel" ButtonTitle="Update VehicleModel" OnValidSubmit="UpdateVehicleModel" />

    <button class="btn btn-danger form-control mt-3" @onclick="DeleteVehicleModel">Delete VehicleModel</button>
}
else if (!_isFound)
{
    <p>VehicleModel with id '@Id' is not found!</p>
}
else
{
    <p>Loading...</p>
}


@code {

    private bool _isFound = true;

    [Parameter]
    public long Id { get; set; }

    private VehicleModel? VehicleModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            VehicleModel = await VehicleModelService.GetVehicleModelByIdAsync(Id);
        }
        catch
        {
            _isFound = false;
        }
    }

    private async Task UpdateVehicleModel()
    {
        await VehicleModelService.UpdateVehicleModelAsync(Id, VehicleModel);
        NavigationManager.NavigateTo("vehicle-models");
    }

    private async Task DeleteVehicleModel()
    {
        await VehicleModelService.DeleteVehicleModelAsync(Id);
        NavigationManager.NavigateTo("vehicle-models");
    }
}